{"ast":null,"code":"var _jsxFileName = \"/home/yacbln/guess-less/guess-less-react-frontend/src/components/RunningSessionPage.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { sendInSessionMessage } from '../websocket/websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RunningSessionPage = ({\n  setWs,\n  ws,\n  sessionId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [gameStatus, setGameStatus] = useState('');\n  const [messagesList, setMessagesList] = useState([]);\n  ws.onmessage = event => {\n    const data_received = JSON.parse(event.data);\n    console.log('Received:', data_received);\n    console.log('Message received is: ', data_received.message);\n    if (data_received.hasOwnProperty(message)) {}\n    if (data_received.message === 'lose' || data_received.message === 'win') {\n      setGameStatus(data_received.message);\n    } else {\n      addMessage(data_received.message, \"AI\");\n    }\n  };\n  ws.onclose = () => {\n    console.log('WebSocket disconnected');\n    setWs(null);\n  };\n  const handleSendingMessage = () => {\n    //send message to server (backend)\n    sendInSessionMessage(ws, sessionId, message);\n    //post message here (frontend)\n    addMessage(message, \"User\");\n  };\n  const handleInputChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n  const addMessage = (message, speaker) => {\n    setMessagesList(prevMessagesList => [...prevMessagesList, `${speaker} : ${message}`]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Take a Guess\",\n      value: message,\n      onChange: handleInputChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), gameStatus == '' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendingMessage,\n      children: \"Broadcast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Session ID is: \", sessionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messagesList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), gameStatus == 'win' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You Guessed it right !!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), gameStatus == 'lose' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Someone guessed it right. Better luck next time \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RunningSessionPage, \"hesmVPpyirTpMV5XtnIWkALS1rE=\");\n_c = RunningSessionPage;\nexport default RunningSessionPage;\nvar _c;\n$RefreshReg$(_c, \"RunningSessionPage\");","map":{"version":3,"names":["React","useState","sendInSessionMessage","jsxDEV","_jsxDEV","RunningSessionPage","setWs","ws","sessionId","_s","message","setMessage","gameStatus","setGameStatus","messagesList","setMessagesList","onmessage","event","data_received","JSON","parse","data","console","log","hasOwnProperty","addMessage","onclose","handleSendingMessage","handleInputChangeMessage","target","value","speaker","prevMessagesList","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","_c","$RefreshReg$"],"sources":["/home/yacbln/guess-less/guess-less-react-frontend/src/components/RunningSessionPage.js"],"sourcesContent":["import {React,useState} from 'react';\nimport {sendInSessionMessage} from '../websocket/websocket';\n\nconst RunningSessionPage = ({setWs,ws,sessionId}) => {\n  const [message, setMessage] = useState('');\n  const [gameStatus, setGameStatus] = useState('');\n  const [messagesList, setMessagesList] = useState([]);\n\n  ws.onmessage = (event) => {\n    const data_received = JSON.parse(event.data)\n    console.log('Received:', data_received);\n    console.log('Message received is: ', data_received.message)\n    \n    if (data_received.hasOwnProperty(message)){}\n    if (data_received.message === 'lose' || data_received.message === 'win'){\n      setGameStatus(data_received.message);\n    }\n    else {\n      addMessage(data_received.message,\"AI\")\n    }\n\n};\n  ws.onclose = () => {\n      console.log('WebSocket disconnected');\n      setWs(null);\n  };\n\n  const handleSendingMessage = () => {\n    //send message to server (backend)\n    sendInSessionMessage(ws,sessionId,message);\n    //post message here (frontend)\n    addMessage(message,\"User\")\n  };\n\n  const handleInputChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  const addMessage = (message, speaker) => {\n    setMessagesList((prevMessagesList) => [...prevMessagesList, `${speaker} : ${message}`]);\n  };\n\n  return (\n    <div >\n      <input\n        type=\"text\"\n        placeholder=\"Take a Guess\"\n        value={message}\n        onChange={handleInputChangeMessage}\n      />\n      { gameStatus == '' && \n      (<button onClick={handleSendingMessage}>Broadcast</button>\n      )}\n      <div>\n      <h2>Session ID is: {sessionId}</h2>\n      <ul>\n      {messagesList.map((item, index) => (\n          <li key={index}>{item}</li>\n      ))}\n      </ul>\n    </div>\n    {gameStatus == 'win' && (\n      <h2>You Guessed it right !!! </h2>\n    )}\n    {gameStatus == 'lose' && (\n      <h2>Someone guessed it right. Better luck next time </h2>\n    )}\n    </div>\n\n  );\n};\n\nexport default RunningSessionPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}