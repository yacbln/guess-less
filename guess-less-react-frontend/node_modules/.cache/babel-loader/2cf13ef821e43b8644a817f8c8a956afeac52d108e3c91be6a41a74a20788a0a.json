{"ast":null,"code":"var _jsxFileName = \"/home/yacbln/guess-less/guess-less-react-frontend/src/components/CreateSessionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createSession, requestStartSession } from '../websocket/websocket';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSessionPage = ({\n  setWs,\n  ws\n}) => {\n  _s();\n  const [usersJoinedList, setUsersJoinedList] = useState([]);\n  const [sessionId, setSessionID] = useState(null);\n  const [sessionStatus, setSessionStatus] = useState('SessionNotCreated');\n  const navigate = useNavigate();\n  const connectWebSocket = () => {\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n      setWs(socket);\n      createSession(socket);\n    };\n    socket.onmessage = event => {\n      const data_received = JSON.parse(event.data);\n      console.log('Received:', data_received);\n      if (data_received.type == \"session_created\") {\n        setSessionID(data_received.sessionId);\n        setSessionStatus('WaitingForUsers');\n      }\n      if (data_received.type == \"session_joined\") {\n        console.log('someone joined the session!  ');\n      }\n      if (data_received.type == \"user_joined\") {\n        addUser(data_received.username);\n      }\n      if (data_received.type == \"session_started\") {\n        navigate('/run-session');\n      }\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      setWs(null);\n    };\n  };\n  const handleCreateSession = () => {\n    connectWebSocket();\n  };\n  const addUser = user => {\n    setUsersJoinedList(prevUsersJoinedList => [...prevUsersJoinedList, user]);\n  };\n  const startSession = () => {\n    requestStartSession(ws, sessionId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sessionStatus == 'SessionNotCreated' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateSession,\n        children: \"Create Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), sessionStatus == 'WaitingForUsers' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Session ID is: \", sessionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: usersJoinedList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSession,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateSessionPage, \"cv9YYSwrKUBBq52Bf7lYfUOM1Ko=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateSessionPage;\nexport default CreateSessionPage;\nvar _c;\n$RefreshReg$(_c, \"CreateSessionPage\");","map":{"version":3,"names":["React","useState","useEffect","createSession","requestStartSession","useNavigate","jsxDEV","_jsxDEV","CreateSessionPage","setWs","ws","_s","usersJoinedList","setUsersJoinedList","sessionId","setSessionID","sessionStatus","setSessionStatus","navigate","connectWebSocket","socket","WebSocket","onopen","console","log","onmessage","event","data_received","JSON","parse","data","type","addUser","username","onclose","handleCreateSession","user","prevUsersJoinedList","startSession","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","_c","$RefreshReg$"],"sources":["/home/yacbln/guess-less/guess-less-react-frontend/src/components/CreateSessionPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {createSession,requestStartSession} from '../websocket/websocket';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst CreateSessionPage = ({setWs,ws}) => {\n  const [usersJoinedList, setUsersJoinedList] = useState([]);\n  const [sessionId, setSessionID] = useState(null)\n  const [sessionStatus, setSessionStatus] = useState('SessionNotCreated');\n  const navigate = useNavigate();\n  \n\n  const connectWebSocket = () => {\n    const socket = new WebSocket('ws://localhost:8080');\n\n    socket.onopen = () => {\n        console.log('WebSocket connected');\n        setWs(socket);\n        createSession(socket);\n    };\n    socket.onmessage = (event) => {\n        const data_received = JSON.parse(event.data)\n        console.log('Received:', data_received);\n        if (data_received.type == \"session_created\"){\n            setSessionID(data_received.sessionId);\n            setSessionStatus('WaitingForUsers');\n        }\n\n        if (data_received.type == \"session_joined\"){\n          console.log('someone joined the session!  ');\n        }\n\n        if (data_received.type == \"user_joined\"){\n          addUser(data_received.username);\n        }\n\n        if (data_received.type == \"session_started\"){\n\n          navigate('/run-session');\n        }\n    };\n    socket.onclose = () => {\n        console.log('WebSocket disconnected');\n        setWs(null);\n    };\n};\n  const handleCreateSession = () => {\n    connectWebSocket();\n  };\n\n  const addUser = (user) => {\n    setUsersJoinedList((prevUsersJoinedList) => [...prevUsersJoinedList, user]);\n  };\n\n  const startSession = () => {\n    requestStartSession(ws,sessionId);\n  };\n\n  return (\n    <div>\n      {sessionStatus == 'SessionNotCreated' && (\n      <div>\n        <h2>Create a New Session</h2>\n        <button onClick={handleCreateSession}>Create Session</button>\n      </div>\n      )}\n      {sessionStatus == 'WaitingForUsers' && (\n      <div>\n        <h2>Session ID is: {sessionId}</h2>\n        <ul>\n        {usersJoinedList.map((item, index) => (\n            <li key={index}>{item}</li>\n        ))}\n        </ul>\n        <button onClick={startSession}>Start Game</button>\n      </div>\n      )}\n    </div>\n  );\n};\n\nexport default CreateSessionPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}