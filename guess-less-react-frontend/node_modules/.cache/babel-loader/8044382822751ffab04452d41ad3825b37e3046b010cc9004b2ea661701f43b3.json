{"ast":null,"code":"var _jsxFileName = \"/home/yacbln/guess-less-project/guess-less-frontend/src/components/JoinSessionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { joinSession } from '../websocket/websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinSessionPage = () => {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [ws, setWs] = useState(null);\n  const connectWebSocket = () => {\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n      setWs(socket);\n      joinSession(ws, sessionId);\n    };\n    socket.onmessage = event => {\n      console.log('Received:', event.data);\n      // Handle received messages from the server\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      setWs(null);\n    };\n  };\n  const handleJoinSession = () => {\n    connectWebSocket();\n  };\n  const handleInputChange = event => {\n    setSessionId(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join an Existing Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter session ID\",\n      value: sessionId,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinSession,\n      children: \"Join Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(JoinSessionPage, \"7Z0Mn1UMmTsgHwkxAHdv3rtuoN8=\");\n_c = JoinSessionPage;\nexport default JoinSessionPage;\nvar _c;\n$RefreshReg$(_c, \"JoinSessionPage\");","map":{"version":3,"names":["React","useState","joinSession","jsxDEV","_jsxDEV","JoinSessionPage","_s","sessionId","setSessionId","ws","setWs","connectWebSocket","socket","WebSocket","onopen","console","log","onmessage","event","data","onclose","handleJoinSession","handleInputChange","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/yacbln/guess-less-project/guess-less-frontend/src/components/JoinSessionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {joinSession} from '../websocket/websocket';\n\nconst JoinSessionPage = () => {\n  const [sessionId, setSessionId] = useState('');\n  const [ws, setWs] = useState(null);\n  \n  const connectWebSocket = () => {\n      const socket = new WebSocket('ws://localhost:8080');\n  \n      socket.onopen = () => {\n          console.log('WebSocket connected');\n          setWs(socket);\n          joinSession(ws,sessionId);\n      };\n  \n      socket.onmessage = (event) => {\n          console.log('Received:', event.data);\n          // Handle received messages from the server\n      };\n  \n      socket.onclose = () => {\n          console.log('WebSocket disconnected');\n          setWs(null);\n      };\n  };\n  \n\nconst handleJoinSession = () => {\n  connectWebSocket();\n};\n\n\n  const handleInputChange = event => {\n    setSessionId(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Join an Existing Session</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter session ID\"\n        value={sessionId}\n        onChange={handleInputChange}\n      />\n      <button onClick={handleJoinSession}>Join Session</button>\n    </div>\n  );\n};\n\nexport default JoinSessionPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,WAAW,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElC,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCN,KAAK,CAACE,MAAM,CAAC;MACbV,WAAW,CAACO,EAAE,EAACF,SAAS,CAAC;IAC7B,CAAC;IAEDK,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC1BH,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEE,KAAK,CAACC,IAAI,CAAC;MACpC;IACJ,CAAC;IAEDP,MAAM,CAACQ,OAAO,GAAG,MAAM;MACnBL,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCN,KAAK,CAAC,IAAI,CAAC;IACf,CAAC;EACL,CAAC;EAGH,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9BV,gBAAgB,CAAC,CAAC;EACpB,CAAC;EAGC,MAAMW,iBAAiB,GAAGJ,KAAK,IAAI;IACjCV,YAAY,CAACU,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BP,KAAK,EAAEjB,SAAU;MACjByB,QAAQ,EAAEV;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFzB,OAAA;MAAQ6B,OAAO,EAAEZ,iBAAkB;MAAAI,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACvB,EAAA,CA9CID,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAgDrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}