{"ast":null,"code":"var _jsxFileName = \"/home/yacbln/guess-less/guess-less-react-frontend/src/components/JoinSessionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { joinSession } from '../websocket/websocket';\nimport { useNavigate } from 'react-router-dom';\nimport { useWebSocket } from './WebSocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinSessionPage = () => {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [username, setUsername] = useState('');\n  const [ws, setWs] = useState(null);\n  const navigate = useNavigate();\n  const [sessionStatus, setSessionStatus] = useState('SessionNotJoined');\n  const {\n    setWebSocket\n  } = useWebSocket();\n  const connectWebSocket = () => {\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n      setWs(socket);\n      setWebSocket(ws);\n      joinSession(socket, sessionId, username);\n    };\n    socket.onmessage = event => {\n      const data_received = JSON.parse(event.data);\n      console.log('Received:', data_received);\n      if (data_received.type == \"session_joined\") {\n        console.log('You joined the session');\n        setSessionStatus('SessionJoined');\n      }\n      if (data_received.type == \"session_started\") {\n        navigate('/run-session', {\n          state: {\n            ws\n          }\n        });\n      }\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      setWs(null);\n    };\n  };\n  const handleJoinSession = () => {\n    connectWebSocket();\n  };\n  const handleInputChangeSession = event => {\n    setSessionId(event.target.value);\n  };\n  const handleInputChangeUsername = event => {\n    setUsername(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sessionStatus == 'SessionNotJoined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join an Existing Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter session ID\",\n        value: sessionId,\n        onChange: handleInputChangeSession\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        value: username,\n        onChange: handleInputChangeUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoinSession,\n        children: \"Join Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), sessionStatus == 'SessionJoined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You joined the session, Please hold tight until the owner starts the game.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(JoinSessionPage, \"QMwsFjWF+9dHhim8Vw6pGC84c74=\", false, function () {\n  return [useNavigate, useWebSocket];\n});\n_c = JoinSessionPage;\nexport default JoinSessionPage;\nvar _c;\n$RefreshReg$(_c, \"JoinSessionPage\");","map":{"version":3,"names":["React","useState","joinSession","useNavigate","useWebSocket","jsxDEV","_jsxDEV","JoinSessionPage","_s","sessionId","setSessionId","username","setUsername","ws","setWs","navigate","sessionStatus","setSessionStatus","setWebSocket","connectWebSocket","socket","WebSocket","onopen","console","log","onmessage","event","data_received","JSON","parse","data","type","state","onclose","handleJoinSession","handleInputChangeSession","target","value","handleInputChangeUsername","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/yacbln/guess-less/guess-less-react-frontend/src/components/JoinSessionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {joinSession} from '../websocket/websocket';\nimport { useNavigate } from 'react-router-dom';\nimport { useWebSocket } from './WebSocketContext';\n\nconst JoinSessionPage = () => {\n  const [sessionId, setSessionId] = useState('');\n  const [username, setUsername] = useState('');\n  const [ws, setWs] = useState(null);\n  const navigate = useNavigate();\n  const [sessionStatus, setSessionStatus] = useState('SessionNotJoined');\n  const { setWebSocket } = useWebSocket();\n  \n  const connectWebSocket = () => {\n      const socket = new WebSocket('ws://localhost:8080');\n  \n      socket.onopen = () => {\n          console.log('WebSocket connected');\n          setWs(socket);\n          setWebSocket(ws);\n          joinSession(socket,sessionId,username);\n      };\n  \n      socket.onmessage = (event) => {\n          const data_received = JSON.parse(event.data)\n          console.log('Received:', data_received);\n\n          if (data_received.type == \"session_joined\"){\n            console.log('You joined the session');\n            setSessionStatus('SessionJoined');\n          }\n\n          if (data_received.type == \"session_started\"){\n            navigate('/run-session', { state: { ws } });\n          }\n      };\n  \n      socket.onclose = () => {\n          console.log('WebSocket disconnected');\n          setWs(null);\n      };\n  };\n\nconst handleJoinSession = () => {\n  connectWebSocket();\n};\n\n\nconst handleInputChangeSession = event => {\n    setSessionId(event.target.value);\n  };\n\nconst handleInputChangeUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  return (\n\n    <div>\n      {sessionStatus == 'SessionNotJoined' && (\n      <div>\n      <h2>Join an Existing Session</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter session ID\"\n        value={sessionId}\n        onChange={handleInputChangeSession}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Enter Username\"\n        value={username}\n        onChange={handleInputChangeUsername}\n      />\n      <button onClick={handleJoinSession}>Join Session</button>\n    </div>\n      )}\n      {sessionStatus == 'SessionJoined' && (\n      <div>\n        <h2>You joined the session, Please hold tight until the owner starts the game.</h2>\n      </div>\n      )}\n    </div>\n\n\n  );\n};\n\nexport default JoinSessionPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}