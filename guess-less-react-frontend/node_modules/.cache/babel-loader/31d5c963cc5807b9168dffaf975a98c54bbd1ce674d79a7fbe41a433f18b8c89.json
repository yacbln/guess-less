{"ast":null,"code":"var _jsxFileName = \"/Users/yb97/Desktop/ProgrammingStuff/Github/guess-less/guess-less-react-frontend/src/components/RunningSessionPage.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { sendInSessionMessage } from '../websocket/websocket';\nimport CountdownTimer from './misc/Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RunningSessionPage = ({\n  setWs,\n  ws,\n  sessionId,\n  hint,\n  initTurn\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [gameStatus, setGameStatus] = useState(initTurn);\n  const [messagesList, setMessagesList] = useState([]);\n  ws.onmessage = event => {\n    const data_received = JSON.parse(event.data);\n    console.log('Received:', data_received);\n    console.log('Message received is: ', data_received.message);\n    if (data_received.hasOwnProperty('user')) {\n      addMessage(data_received.message, data_received.user);\n    } else if (data_received.message === 'lose' || data_received.message === 'win') {\n      setGameStatus(data_received.message);\n    } else {\n      addMessage(data_received.message, \"Moderator\");\n    }\n    if (data_received.hasOwnProperty('turn')) {\n      setGameStatus(data_received.turn);\n    }\n  };\n  ws.onclose = () => {\n    console.log('WebSocket disconnected');\n    setWs(null);\n  };\n  const handleSendingMessage = () => {\n    //send message to server (backend)\n    sendInSessionMessage(ws, sessionId, message);\n    //post message here (frontend)\n    addMessage(message, \"You\");\n  };\n  const handleInputChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n  const addMessage = (message, speaker) => {\n    setMessagesList(prevMessagesList => [...prevMessagesList, `${speaker} : ${message}`]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CountdownTimer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Take a Guess\",\n      value: message,\n      onChange: handleInputChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), gameStatus == 'y' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendingMessage,\n      children: \"Broadcast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hint: \", hint]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messagesList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), gameStatus == 'win' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You Guessed it right !!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), gameStatus == 'lose' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Someone guessed it right. Better luck next time \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RunningSessionPage, \"Ldhi5R/eDS5QyFZYN2Vwd3kZA4E=\");\n_c = RunningSessionPage;\nexport default RunningSessionPage;\nvar _c;\n$RefreshReg$(_c, \"RunningSessionPage\");","map":{"version":3,"names":["React","useState","sendInSessionMessage","CountdownTimer","jsxDEV","_jsxDEV","RunningSessionPage","setWs","ws","sessionId","hint","initTurn","_s","message","setMessage","gameStatus","setGameStatus","messagesList","setMessagesList","onmessage","event","data_received","JSON","parse","data","console","log","hasOwnProperty","addMessage","user","turn","onclose","handleSendingMessage","handleInputChangeMessage","target","value","speaker","prevMessagesList","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","item","index","_c","$RefreshReg$"],"sources":["/Users/yb97/Desktop/ProgrammingStuff/Github/guess-less/guess-less-react-frontend/src/components/RunningSessionPage.js"],"sourcesContent":["import {React,useState} from 'react';\nimport {sendInSessionMessage} from '../websocket/websocket';\nimport CountdownTimer from './misc/Timer'\n\nconst RunningSessionPage = ({setWs,ws,sessionId,hint,initTurn}) => {\n  const [message, setMessage] = useState('');\n  const [gameStatus, setGameStatus] = useState(initTurn);\n  const [messagesList, setMessagesList] = useState([]);\n\n  ws.onmessage = (event) => {\n    const data_received = JSON.parse(event.data)\n    console.log('Received:', data_received);\n    console.log('Message received is: ', data_received.message)\n\n    if (data_received.hasOwnProperty('user')){\n      addMessage(data_received.message,data_received.user)\n    }\n    else if (data_received.message === 'lose' || data_received.message === 'win'){\n      setGameStatus(data_received.message);\n    }\n    else {\n      addMessage(data_received.message,\"Moderator\")\n    }\n\n    if (data_received.hasOwnProperty('turn')){\n      setGameStatus(data_received.turn)\n    \n    }\n\n\n};\n  ws.onclose = () => {\n      console.log('WebSocket disconnected');\n      setWs(null);\n  };\n\n  const handleSendingMessage = () => {\n    //send message to server (backend)\n    sendInSessionMessage(ws,sessionId,message);\n    //post message here (frontend)\n    addMessage(message,\"You\")\n  };\n\n  const handleInputChangeMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  const addMessage = (message, speaker) => {\n    setMessagesList((prevMessagesList) => [...prevMessagesList, `${speaker} : ${message}`]);\n  };\n\n  return (\n    <div >\n      <CountdownTimer></CountdownTimer>\n      <input\n        type=\"text\"\n        placeholder=\"Take a Guess\"\n        value={message}\n        onChange={handleInputChangeMessage}\n      />\n      { gameStatus == 'y' && \n      (<button onClick={handleSendingMessage}>Broadcast</button>\n      )}\n      <div>\n      {/* <h2>Session ID is: {sessionId}</h2> */}\n      <h1>Hint: {hint}</h1>\n      <ul>\n      {messagesList.map((item, index) => (\n          <li key={index}>{item}</li>\n      ))}\n      </ul>\n    </div>\n    {gameStatus == 'win' && (\n      <h2>You Guessed it right !!! </h2>\n    )}\n    {gameStatus == 'lose' && (\n      <h2>Someone guessed it right. Better luck next time </h2>\n    )}\n    </div>\n\n  );\n};\n\nexport default RunningSessionPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}