{"ast":null,"code":"var _jsxFileName = \"/home/yacbln/guess-less-project/guess-less-frontend/src/components/CreateSessionPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSessionPage = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const handleCreateSession = () => {\n    const sessionId = generateSessionId();\n    console.log(sessionId);\n\n    // Implement logic to create a new session\n    // For now, let's assume you have an API endpoint for creating sessions\n    // You may replace this with your actual API endpoint\n    // fetch('/api/create-session', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({ sessionId }), // Sending sessionId to the server\n    // })\n    //   .then(response => {\n    //     if (response.ok) {\n    //       return response.json();\n    //     }\n    //     throw new Error('Failed to create session');\n    //   })\n    //   .then(data => {\n    //     // Redirect to the created session\n    //     history.push(`/session/${data.sessionId}`);\n    //   })\n    //   .catch(error => {\n    //     console.error('Error creating session:', error);\n    //     // Handle error\n    //   });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateSession,\n      children: \"Create Session\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateSessionPage, \"WaUAhaJFJPiWa3RTvgBWjNKriLY=\");\n_c = CreateSessionPage;\nexport default CreateSessionPage;\nvar _c;\n$RefreshReg$(_c, \"CreateSessionPage\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","CreateSessionPage","_s","ws","setWs","useState","handleCreateSession","sessionId","generateSessionId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/yacbln/guess-less-project/guess-less-frontend/src/components/CreateSessionPage.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst CreateSessionPage = () => {\n  const [ws, setWs] = useState(null);\n\n\n  const handleCreateSession = () => {\n    const sessionId = generateSessionId();\n    console.log(sessionId)\n\n    // Implement logic to create a new session\n    // For now, let's assume you have an API endpoint for creating sessions\n    // You may replace this with your actual API endpoint\n    // fetch('/api/create-session', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({ sessionId }), // Sending sessionId to the server\n    // })\n    //   .then(response => {\n    //     if (response.ok) {\n    //       return response.json();\n    //     }\n    //     throw new Error('Failed to create session');\n    //   })\n    //   .then(data => {\n    //     // Redirect to the created session\n    //     history.push(`/session/${data.sessionId}`);\n    //   })\n    //   .catch(error => {\n    //     console.error('Error creating session:', error);\n    //     // Handle error\n    //   });\n  };\n\n  return (\n    <div>\n      <h2>Create a New Session</h2>\n      <button onClick={handleCreateSession}>Create Session</button>\n    </div>\n  );\n};\n\nexport default CreateSessionPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAGlC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,SAAS,GAAGC,iBAAiB,CAAC,CAAC;IACrCC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;;IAEtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;EAED,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Bf,OAAA;MAAQgB,OAAO,EAAEV,mBAAoB;MAAAK,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACb,EAAA,CAxCID,iBAAiB;AAAAgB,EAAA,GAAjBhB,iBAAiB;AA0CvB,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}