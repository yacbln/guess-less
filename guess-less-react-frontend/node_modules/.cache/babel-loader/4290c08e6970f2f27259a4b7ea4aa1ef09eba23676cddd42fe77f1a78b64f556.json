{"ast":null,"code":"var _jsxFileName = \"/Users/yb97/Desktop/ProgrammingStuff/Github/guess-less/guess-less-react-frontend/src/components/CreateSessionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createSession, requestStartSession } from '../websocket/websocket';\nimport { useNavigate } from 'react-router-dom';\nimport './HomePage.css';\nimport logo from '../images/logo.png';\nimport Usernames from './misc/Usernames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSessionPage = ({\n  setWs,\n  setSessionId,\n  ws,\n  sessionId,\n  setHint,\n  setInitTurn\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [usersJoinedList, setUsersJoinedList] = useState([]);\n  const [sessionStatus, setSessionStatus] = useState('SessionNotCreated');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // This runs after every render\n    document.title = `You clicked ${count} times`;\n  });\n  const connectWebSocket = () => {\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n      setWs(socket);\n      createSession(socket, username);\n    };\n    socket.onmessage = event => {\n      const data_received = JSON.parse(event.data);\n      console.log('Received:', data_received);\n      if (data_received.type == \"session_created\") {\n        setSessionId(data_received.sessionId);\n        setSessionStatus('WaitingForUsers');\n      }\n      if (data_received.type == \"session_joined\") {\n        console.log('someone joined the session!  ');\n      }\n      if (data_received.type == \"user_joined\") {\n        addUser(data_received.username);\n      }\n      if (data_received.type == \"session_started\") {\n        setHint(data_received.hint);\n        setInitTurn(data_received.turn);\n        navigate('/run-session');\n      }\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      setWs(null);\n    };\n  };\n  const handleCreateSession = () => {\n    connectWebSocket();\n    console.log(\"adding myself: \", username);\n    addUser(username);\n  };\n  const addUser = user => {\n    setUsersJoinedList(prevUsersJoinedList => [...prevUsersJoinedList, user]);\n  };\n  const startSession = () => {\n    requestStartSession(ws, sessionId);\n  };\n  const handleInputChangeUsername = event => {\n    setUsername(event.target.value);\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"home-container\">\n    // <img src={logo} alt=\"Logo\" className=\"logo\" />\n    //   <h1>Welcome to Guess Less</h1>\n    //   <p>Start or join a session with friends!</p>\n    //   <div className=\"buttons\">\n    //     <Link to=\"/create-session\" className=\"btn btn-primary\" style={{ marginRight: '20px' }}>Create New Session</Link>\n    //     <Link to=\"/join-session\" className=\"btn btn-primary\">Join Existing Session</Link>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), sessionStatus == 'SessionNotCreated' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter Username\",\n              value: username,\n              onChange: handleInputChangeUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreateSession,\n              className: \"btn btn-primary\",\n              children: \"Create Session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), sessionStatus == 'WaitingForUsers' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Session ID is: \", sessionId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Usernames, {\n          usernames: usersJoinedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startSession,\n          className: \"btn btn-primary\",\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(CreateSessionPage, \"NwU+GElkUaBXaJnsIS6fjt0huJg=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateSessionPage;\nexport default CreateSessionPage;\nvar _c;\n$RefreshReg$(_c, \"CreateSessionPage\");","map":{"version":3,"names":["React","useState","useEffect","createSession","requestStartSession","useNavigate","logo","Usernames","jsxDEV","_jsxDEV","CreateSessionPage","setWs","setSessionId","ws","sessionId","setHint","setInitTurn","_s","username","setUsername","usersJoinedList","setUsersJoinedList","sessionStatus","setSessionStatus","navigate","document","title","count","connectWebSocket","socket","WebSocket","onopen","console","log","onmessage","event","data_received","JSON","parse","data","type","addUser","hint","turn","onclose","handleCreateSession","user","prevUsersJoinedList","startSession","handleInputChangeUsername","target","value","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","usernames","_c","$RefreshReg$"],"sources":["/Users/yb97/Desktop/ProgrammingStuff/Github/guess-less/guess-less-react-frontend/src/components/CreateSessionPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {createSession,requestStartSession} from '../websocket/websocket';\nimport { useNavigate } from 'react-router-dom';\nimport './HomePage.css';\nimport logo from '../images/logo.png';\nimport Usernames from './misc/Usernames';\n\n\nconst CreateSessionPage = ({setWs,setSessionId,ws,sessionId,setHint, setInitTurn}) => {\n  const [username, setUsername] = useState('');\n  const [usersJoinedList, setUsersJoinedList] = useState([]);\n  const [sessionStatus, setSessionStatus] = useState('SessionNotCreated');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // This runs after every render\n    document.title = `You clicked ${count} times`;\n  });\n\n  const connectWebSocket = () => {\n    const socket = new WebSocket('ws://localhost:8080');\n\n    socket.onopen = () => {\n        console.log('WebSocket connected');\n        setWs(socket);\n        createSession(socket,username);\n    };\n    socket.onmessage = (event) => {\n        const data_received = JSON.parse(event.data)\n        console.log('Received:', data_received);\n        if (data_received.type == \"session_created\"){\n            setSessionId(data_received.sessionId);\n            setSessionStatus('WaitingForUsers');\n        }\n\n        if (data_received.type == \"session_joined\"){\n          console.log('someone joined the session!  ');\n        }\n\n        if (data_received.type == \"user_joined\"){\n          addUser(data_received.username);\n        }\n\n        if (data_received.type == \"session_started\"){\n          setHint(data_received.hint)\n          setInitTurn(data_received.turn)\n          navigate('/run-session');\n        }\n    };\n    socket.onclose = () => {\n        console.log('WebSocket disconnected');\n        setWs(null);\n    };\n};\n  const handleCreateSession = () => {\n    connectWebSocket();\n    console.log(\"adding myself: \", username)\n    addUser(username);\n\n  };\n\n  const addUser = (user) => {\n    setUsersJoinedList((prevUsersJoinedList) => [...prevUsersJoinedList, user]);\n  };\n\n  const startSession = () => {\n    requestStartSession(ws,sessionId);\n  };\n\n  const handleInputChangeUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  return (\n\n    // <div className=\"home-container\">\n    // <img src={logo} alt=\"Logo\" className=\"logo\" />\n    //   <h1>Welcome to Guess Less</h1>\n    //   <p>Start or join a session with friends!</p>\n    //   <div className=\"buttons\">\n    //     <Link to=\"/create-session\" className=\"btn btn-primary\" style={{ marginRight: '20px' }}>Create New Session</Link>\n    //     <Link to=\"/join-session\" className=\"btn btn-primary\">Join Existing Session</Link>\n    //   </div>\n    // </div>\n\n\n    <div className=\"home-container\">\n\n      {/* <div className=\"mb-3\">\n        <button className=\"btn btn-primary\"> Home </button>\n      </div> */}\n      <img src={logo} alt=\"Logo\" className=\"logo\" />\n      {sessionStatus == 'SessionNotCreated' && (\n      <div>\n        <h3>Create a New Session</h3>\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter Username\"\n            value={username}\n            onChange={handleInputChangeUsername}\n          />\n          <button onClick={handleCreateSession} className=\"btn btn-primary\">Create Session</button>\n        </div>\n      </div>\n      </div>\n      )}\n      {sessionStatus == 'WaitingForUsers' && (\n      <div>\n        <h3>Session ID is: {sessionId}</h3>\n\n        <Usernames usernames={usersJoinedList} />\n        {/* <ul>\n        {usersJoinedList.map((item, index) => (\n            <li key={index}>{item}</li>\n        ))}\n        </ul> */}\n        <button onClick={startSession} className=\"btn btn-primary\">Start Game</button>\n      </div>\n      )}\n\n    </div>\n  );\n};\n\nexport default CreateSessionPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}